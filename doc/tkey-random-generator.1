.\" Generated by scdoc 1.11.2
.\" Complete documentation for this program is not available as a GNU info page
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.nh
.ad l
.\" Begin generated content:
.TH "tkey" "1" "2023-10-03"
.P
.SH NAME
.P
tkey-random-generator - A hardware-backed random number generator
.P
.SH SYNOPSIS
.P
\fBtkey-random-generator\fR generate BYTES [-s] [--uss] [options.\&.\&.\&]
.P
\fBtkey-random-generator\fR verify FILE SIG-FILE PUBKEY-FILE [-b] [options.\&.\&.\&]
.P
.SH DESCRIPTION
.P
\fBtkey-random-generator\fR is a hardware-backed source of high-quality
random numbers for use with the Tillitis TKey.\&
.P
.SH OPTIONS
.P
Common options for both commands:
.P
\fB-h, --help\fR
.P
.RS 4
Output help text.\&
.P
.RE
.SH COMMANDS
.P
.SS generate
.P
\fBtkey-random-generator\fR generate BYTES [-s] [--uss] [common options.\&.\&.\&]
.P
Generates BYTES bytes of random data, optionally signed with Ed25519
to provide proof of origin.\&
.P
Output can be chosen between stdout (in hexadecimal) or a binary file.\&
.P
\fB-f, --file FILE\fR
.P
.RS 4
Output random data as binary to FILE.\&
.P
.RE
\fB-p\fR, \fB--port PATH\fR
.P
.RS 4
Set serial port device PATH.\& If this is not passed, auto-detection
will be attempted.\&
.P
.P
.RE
\fB-s, --signature\fR
.P
.RS 4
Request an Ed25519 signature of the random data.\&
.P
.RE
\fB--speed BPS\fR
.P
.RS 4
Set serial port speed to BPS b/s.\& Default is 62500 b/s.\&
.P
.RE
\fB--uss\fR
.P
.RS 4
Ask for a phrase to be hashed as the User Supplied Secret.\& The
USS is loaded onto the TKey along with the app itself.\& A
different USS results in different Compound Device Identifier,
a different initialisation of the random sequence, and another
key pair used for signing.\&
.P
.RE
\fB--uss-file FILE\fR
.P
.RS 4
Read FILE and hash its contents as the USS.\& Use '\&-'\& (dash) to read
from stdin.\& The full contents are hashed unmodified (e.\&g.\& newlines are not stripped).\&
.P
.RE
.SS verify
.P
\fBtkey-random-generator\fR verify FILE SIG-FILE PUBKEY-FILE [-b] [common
options.\&.\&.\&]
.P
Verifies the Ed25519 signature of FILE.\& Does not need a connected TKey
to verify.\&
.P
FILE is assumed to be a hexadecimal representation of the random data
from the \fBgenerate\fR command.\& Use \fB-b\fR if binary.\& SIG-FILE is expected
to be 64 bytes Ed25519 signature in hex.\& PUBKEY-FILE is expected to be
32 bytes Ed25519 public key in hex.\&
.P
The exit code is 0 if the signature is valid, otherwise non-zero.\&
Newlines will be stripped from the input files.\&
.P
Options:
.P
\fB-b, --binary\fR
.P
.RS 4
Specify if the input FILE is in binary format.\&
.P
.RE
\fB-h, --help\fR
.P
.RS 4
Output this help.\&
.P
.RE
.SH EXAMPLES
.P
Generate signed random data in a binary file and ask for a User
Supplied Secret:
.P
.nf
.RS 4
\&./tkey-random-generator generate 4711 -s --uss -f random\&.dat
Auto-detected serial port /dev/ttyACM0
Connecting to device on serial port /dev/ttyACM0\&.\&.\&.
Enter phrase for the USS:
Repeat the phrase:
Writing 4711 bytes of random data to: random\&.dat


Public key: 329f0d5c806409508d359bd562fe7e5963b8c7e9b767a22681d55e7783736170
Signature: c98719eb80ed3f20e0ade71a75d21c90d0a87760aa78bc53d507c1a4a42cccae8986e4aa215ca1936939b1016fd7c12c854056bacefc4e2e841e598a2e693303
Hash: 6fcd14991295926d81dff0c1e77e2da6325938dad3a06ee79cc19a4bc89a0f26

Verifying signature \&.\&.\&.
signature verified\&.
.fi
.RE
.P
To verify this signature later, store the public key and the signature
in files, let'\&s say \fBpk\fR and \fBsig\fR.\& Then run:
.P
.nf
.RS 4
\&./tkey-random-generator verify -b random\&.dat sig pk
Verifying signature \&.\&.\&.
Public key: 329f0d5c806409508d359bd562fe7e5963b8c7e9b767a22681d55e7783736170
Signature: c98719eb80ed3f20e0ade71a75d21c90d0a87760aa78bc53d507c1a4a42cccae8986e4aa215ca1936939b1016fd7c12c854056bacefc4e2e841e598a2e693303
BLAKE2s hash: 6fcd14991295926d81dff0c1e77e2da6325938dad3a06ee79cc19a4bc89a0f26
Signature verified\&.
.fi
.RE
.P
.SH SEE ALSO
.P
https://tillitis.\&se/
